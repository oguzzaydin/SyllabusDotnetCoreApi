// <auto-generated />
using System;
using DPA.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DPA.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DPA.Model.ConstraintEntity", b =>
                {
                    b.Property<long>("ConstraintId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("EducationType");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsFreeDay");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<long>("UserId");

                    b.Property<int>("WeeklyHour");

                    b.HasKey("ConstraintId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Constraint","User");

                    b.HasData(
                        new
                        {
                            ConstraintId = 1L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(3434),
                            Description = "Description",
                            EducationType = 1,
                            IsActive = true,
                            IsFreeDay = true,
                            Title = "Kısıt 1",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(3437),
                            UserId = 2L,
                            WeeklyHour = 4
                        },
                        new
                        {
                            ConstraintId = 2L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4149),
                            Description = "Description",
                            EducationType = 2,
                            IsActive = true,
                            IsFreeDay = true,
                            Title = "Kısıt 2",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4150),
                            UserId = 3L,
                            WeeklyHour = 6
                        },
                        new
                        {
                            ConstraintId = 3L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4190),
                            Description = "Description",
                            EducationType = 3,
                            IsActive = true,
                            IsFreeDay = false,
                            Title = "Kısıt 3",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4191),
                            UserId = 4L,
                            WeeklyHour = 8
                        },
                        new
                        {
                            ConstraintId = 4L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4207),
                            Description = "Description",
                            EducationType = 2,
                            IsActive = true,
                            IsFreeDay = true,
                            Title = "Kısıt 4",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4208),
                            UserId = 5L,
                            WeeklyHour = 10
                        },
                        new
                        {
                            ConstraintId = 5L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4221),
                            Description = "Description",
                            EducationType = 1,
                            IsActive = true,
                            IsFreeDay = true,
                            Title = "Kısıt 5",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4222),
                            UserId = 6L,
                            WeeklyHour = 12
                        },
                        new
                        {
                            ConstraintId = 6L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4238),
                            Description = "Description",
                            EducationType = 3,
                            IsActive = true,
                            IsFreeDay = false,
                            Title = "Kısıt 6",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4239),
                            UserId = 7L,
                            WeeklyHour = 14
                        },
                        new
                        {
                            ConstraintId = 7L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4252),
                            Description = "Description",
                            EducationType = 2,
                            IsActive = true,
                            IsFreeDay = true,
                            Title = "Kısıt 7",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4252),
                            UserId = 8L,
                            WeeklyHour = 8
                        },
                        new
                        {
                            ConstraintId = 8L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4266),
                            Description = "Description",
                            EducationType = 1,
                            IsActive = true,
                            IsFreeDay = true,
                            Title = "Kısıt 8",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4266),
                            UserId = 9L,
                            WeeklyHour = 10
                        },
                        new
                        {
                            ConstraintId = 9L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4279),
                            Description = "Description",
                            EducationType = 3,
                            IsActive = true,
                            IsFreeDay = false,
                            Title = "Kısıt 9",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4280),
                            UserId = 10L,
                            WeeklyHour = 12
                        },
                        new
                        {
                            ConstraintId = 10L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4295),
                            Description = "Description",
                            EducationType = 1,
                            IsActive = true,
                            IsFreeDay = true,
                            Title = "Kısıt 10",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4295),
                            UserId = 11L,
                            WeeklyHour = 12
                        },
                        new
                        {
                            ConstraintId = 11L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4309),
                            Description = "Description",
                            EducationType = 2,
                            IsActive = true,
                            IsFreeDay = true,
                            Title = "Kısıt 11",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4309),
                            UserId = 12L,
                            WeeklyHour = 12
                        },
                        new
                        {
                            ConstraintId = 12L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4323),
                            Description = "Description",
                            EducationType = 3,
                            IsActive = true,
                            IsFreeDay = false,
                            Title = "Kısıt 12",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4323),
                            UserId = 13L,
                            WeeklyHour = 16
                        },
                        new
                        {
                            ConstraintId = 13L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4338),
                            Description = "Description",
                            EducationType = 3,
                            IsActive = true,
                            IsFreeDay = false,
                            Title = "Kısıt 13",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(4338),
                            UserId = 14L,
                            WeeklyHour = 16
                        });
                });

            modelBuilder.Entity("DPA.Model.DepartmentEntity", b =>
                {
                    b.Property<long>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("FacultyId");

                    b.Property<long?>("HeadOfDepartmentId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("HeadOfDepartmentId")
                        .IsUnique()
                        .HasFilter("[HeadOfDepartmentId] IS NOT NULL");

                    b.ToTable("Department","Faculty");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(182),
                            DepartmentCode = "BM310",
                            FacultyId = 1L,
                            HeadOfDepartmentId = 1L,
                            Title = "Bilgisayar Mühendisliği Bölümü",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(183)
                        },
                        new
                        {
                            DepartmentId = 2L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(948),
                            DepartmentCode = "BM311",
                            FacultyId = 1L,
                            Title = "Bilişim Sistemleri Mühendisliği Bölümü",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(949)
                        },
                        new
                        {
                            DepartmentId = 3L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(983),
                            DepartmentCode = "BM312",
                            FacultyId = 1L,
                            Title = "Yazılım Mühendisliği Bölümü",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(984)
                        });
                });

            modelBuilder.Entity("DPA.Model.DepartmentLessonEntity", b =>
                {
                    b.Property<long>("DepartmentLessonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("DepartmentId");

                    b.Property<long>("LessonId");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("DepartmentLessonId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LessonId");

                    b.ToTable("DepartmentLesson","Faculty");

                    b.HasData(
                        new
                        {
                            DepartmentLessonId = 1L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(1955),
                            DepartmentId = 1L,
                            LessonId = 1L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(1956)
                        },
                        new
                        {
                            DepartmentLessonId = 2L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2356),
                            DepartmentId = 1L,
                            LessonId = 2L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2357)
                        },
                        new
                        {
                            DepartmentLessonId = 3L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2381),
                            DepartmentId = 1L,
                            LessonId = 3L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2382)
                        },
                        new
                        {
                            DepartmentLessonId = 4L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2395),
                            DepartmentId = 1L,
                            LessonId = 4L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2396)
                        },
                        new
                        {
                            DepartmentLessonId = 5L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2409),
                            DepartmentId = 1L,
                            LessonId = 5L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2410)
                        },
                        new
                        {
                            DepartmentLessonId = 6L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2426),
                            DepartmentId = 1L,
                            LessonId = 6L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2427)
                        },
                        new
                        {
                            DepartmentLessonId = 7L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2460),
                            DepartmentId = 1L,
                            LessonId = 7L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2460)
                        },
                        new
                        {
                            DepartmentLessonId = 8L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2474),
                            DepartmentId = 1L,
                            LessonId = 8L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2475)
                        },
                        new
                        {
                            DepartmentLessonId = 9L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2488),
                            DepartmentId = 1L,
                            LessonId = 9L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2489)
                        },
                        new
                        {
                            DepartmentLessonId = 10L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2503),
                            DepartmentId = 1L,
                            LessonId = 10L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2504)
                        },
                        new
                        {
                            DepartmentLessonId = 11L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2517),
                            DepartmentId = 1L,
                            LessonId = 11L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2518)
                        },
                        new
                        {
                            DepartmentLessonId = 12L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2531),
                            DepartmentId = 1L,
                            LessonId = 12L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(2532)
                        });
                });

            modelBuilder.Entity("DPA.Model.FacultyEntity", b =>
                {
                    b.Property<long>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FacultyCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculty","Faculty");

                    b.HasData(
                        new
                        {
                            FacultyId = 1L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(7464),
                            FacultyCode = "BM310",
                            Title = "BİLGİSAYAR VE BİLİŞİM BİLİMLERİ FAKÜLTESİ",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(7466)
                        },
                        new
                        {
                            FacultyId = 2L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(7724),
                            FacultyCode = "MF123",
                            Title = "Mühendislik Fakültesi",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(7725)
                        },
                        new
                        {
                            FacultyId = 3L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(7745),
                            FacultyCode = "HKK112",
                            Title = "Hukuk Fakültesi",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(7746)
                        },
                        new
                        {
                            FacultyId = 4L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(7760),
                            FacultyCode = "TKL423",
                            Title = "Teknoloji Fakültesi",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(7760)
                        });
                });

            modelBuilder.Entity("DPA.Model.LessonEntity", b =>
                {
                    b.Property<long>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AKTS");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Credit");

                    b.Property<string>("LessonCode")
                        .IsRequired();

                    b.Property<int>("LessonType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("SemesterType");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("WeeklyHour");

                    b.HasKey("LessonId");

                    b.ToTable("Lesson","Faculty");

                    b.HasData(
                        new
                        {
                            LessonId = 1L,
                            AKTS = 4,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(8704),
                            Credit = 4,
                            LessonCode = "TUR 101",
                            LessonType = 1,
                            Name = "TÜRK DİLİ",
                            SemesterType = 1,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(8710),
                            WeeklyHour = 4
                        },
                        new
                        {
                            LessonId = 2L,
                            AKTS = 6,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9888),
                            Credit = 4,
                            LessonCode = "FIZ 111",
                            LessonType = 1,
                            Name = "FİZİK I",
                            SemesterType = 1,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9889),
                            WeeklyHour = 5
                        },
                        new
                        {
                            LessonId = 3L,
                            AKTS = 6,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9926),
                            Credit = 4,
                            LessonCode = "MAT 111",
                            LessonType = 1,
                            Name = "MATEMATİK I",
                            SemesterType = 1,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9927),
                            WeeklyHour = 4
                        },
                        new
                        {
                            LessonId = 4L,
                            AKTS = 4,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9944),
                            Credit = 2,
                            LessonCode = "MAT 113",
                            LessonType = 1,
                            Name = "LİNEER CEBİR",
                            SemesterType = 1,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9945),
                            WeeklyHour = 2
                        },
                        new
                        {
                            LessonId = 5L,
                            AKTS = 4,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9962),
                            Credit = 2,
                            LessonCode = "BSM 101",
                            LessonType = 1,
                            Name = "BİLGİSAYAR MÜHENDİSLİĞİNE GİRİŞ",
                            SemesterType = 1,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9962),
                            WeeklyHour = 2
                        },
                        new
                        {
                            LessonId = 6L,
                            AKTS = 6,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9999),
                            Credit = 4,
                            LessonCode = "BSM 103",
                            LessonType = 1,
                            Name = "PROGRAMLAMAYA GİRİŞ",
                            SemesterType = 1,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local),
                            WeeklyHour = 4
                        },
                        new
                        {
                            LessonId = 7L,
                            AKTS = 4,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(41),
                            Credit = 4,
                            LessonCode = "ING 190",
                            LessonType = 1,
                            Name = "İNGİLİZCE",
                            SemesterType = 2,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(42),
                            WeeklyHour = 4
                        },
                        new
                        {
                            LessonId = 8L,
                            AKTS = 6,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(80),
                            Credit = 4,
                            LessonCode = "FIZ 112",
                            LessonType = 1,
                            Name = "FİZİK II",
                            SemesterType = 2,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(81),
                            WeeklyHour = 5
                        },
                        new
                        {
                            LessonId = 9L,
                            AKTS = 6,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(110),
                            Credit = 4,
                            LessonCode = "MAT 112",
                            LessonType = 1,
                            Name = "MATEMATİK II",
                            SemesterType = 2,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(110),
                            WeeklyHour = 4
                        },
                        new
                        {
                            LessonId = 10L,
                            AKTS = 6,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(137),
                            Credit = 4,
                            LessonCode = "BSM 102",
                            LessonType = 1,
                            Name = "NESNEYE DAYALI PROGRAMLAMA",
                            SemesterType = 2,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(138),
                            WeeklyHour = 4
                        },
                        new
                        {
                            LessonId = 11L,
                            AKTS = 4,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(168),
                            Credit = 3,
                            LessonCode = "BSM 104",
                            LessonType = 1,
                            Name = "WEB TEKNOLOJİLERİ",
                            SemesterType = 2,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(169),
                            WeeklyHour = 3
                        },
                        new
                        {
                            LessonId = 12L,
                            AKTS = 4,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(194),
                            Credit = 3,
                            LessonCode = "IST 108",
                            LessonType = 1,
                            Name = "OLASILIK VE İSTATİSTİK",
                            SemesterType = 2,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(195),
                            WeeklyHour = 3
                        });
                });

            modelBuilder.Entity("DPA.Model.LessonGroupEntity", b =>
                {
                    b.Property<long>("LessonGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("GroupType");

                    b.Property<long>("LessonId");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("LessonGroupId");

                    b.HasIndex("LessonId");

                    b.ToTable("LessonGroup","Faculty");

                    b.HasData(
                        new
                        {
                            LessonGroupId = 1L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1399),
                            GroupType = 1,
                            LessonId = 1L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1401)
                        },
                        new
                        {
                            LessonGroupId = 2L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1594),
                            GroupType = 2,
                            LessonId = 1L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1594)
                        },
                        new
                        {
                            LessonGroupId = 3L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1614),
                            GroupType = 1,
                            LessonId = 2L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1615)
                        },
                        new
                        {
                            LessonGroupId = 4L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1629),
                            GroupType = 2,
                            LessonId = 2L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1630)
                        },
                        new
                        {
                            LessonGroupId = 5L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1644),
                            GroupType = 1,
                            LessonId = 3L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1645)
                        },
                        new
                        {
                            LessonGroupId = 6L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1660),
                            GroupType = 2,
                            LessonId = 3L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1661)
                        },
                        new
                        {
                            LessonGroupId = 7L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1675),
                            GroupType = 1,
                            LessonId = 4L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1675)
                        },
                        new
                        {
                            LessonGroupId = 8L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1689),
                            GroupType = 1,
                            LessonId = 5L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1689)
                        },
                        new
                        {
                            LessonGroupId = 9L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1703),
                            GroupType = 1,
                            LessonId = 6L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1703)
                        },
                        new
                        {
                            LessonGroupId = 10L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1718),
                            GroupType = 2,
                            LessonId = 6L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1719)
                        },
                        new
                        {
                            LessonGroupId = 11L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1732),
                            GroupType = 1,
                            LessonId = 7L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1733)
                        },
                        new
                        {
                            LessonGroupId = 12L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1746),
                            GroupType = 2,
                            LessonId = 7L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1747)
                        },
                        new
                        {
                            LessonGroupId = 13L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1760),
                            GroupType = 1,
                            LessonId = 8L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1761)
                        },
                        new
                        {
                            LessonGroupId = 14L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1774),
                            GroupType = 2,
                            LessonId = 8L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1775)
                        },
                        new
                        {
                            LessonGroupId = 15L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1788),
                            GroupType = 1,
                            LessonId = 9L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1789)
                        },
                        new
                        {
                            LessonGroupId = 16L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1803),
                            GroupType = 2,
                            LessonId = 9L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1804)
                        },
                        new
                        {
                            LessonGroupId = 17L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1817),
                            GroupType = 1,
                            LessonId = 10L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1817)
                        },
                        new
                        {
                            LessonGroupId = 18L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1832),
                            GroupType = 2,
                            LessonId = 10L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1832)
                        },
                        new
                        {
                            LessonGroupId = 19L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1854),
                            GroupType = 1,
                            LessonId = 11L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1855)
                        },
                        new
                        {
                            LessonGroupId = 20L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1869),
                            GroupType = 2,
                            LessonId = 11L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1870)
                        },
                        new
                        {
                            LessonGroupId = 21L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1883),
                            GroupType = 1,
                            LessonId = 12L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1884)
                        },
                        new
                        {
                            LessonGroupId = 22L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1897),
                            GroupType = 2,
                            LessonId = 12L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(1898)
                        });
                });

            modelBuilder.Entity("DPA.Model.LocationEntity", b =>
                {
                    b.Property<long>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("FacultyId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("LocationId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Location","Faculty");

                    b.HasData(
                        new
                        {
                            LocationId = 1L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4053),
                            FacultyId = 1L,
                            Title = "1000",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4057)
                        },
                        new
                        {
                            LocationId = 2L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4549),
                            FacultyId = 1L,
                            Title = "1001",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4550)
                        },
                        new
                        {
                            LocationId = 3L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4575),
                            FacultyId = 1L,
                            Title = "1002",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4576)
                        },
                        new
                        {
                            LocationId = 4L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4592),
                            FacultyId = 1L,
                            Title = "1003",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4592)
                        },
                        new
                        {
                            LocationId = 5L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4607),
                            FacultyId = 1L,
                            Title = "1004",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4608)
                        },
                        new
                        {
                            LocationId = 6L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4624),
                            FacultyId = 1L,
                            Title = "1005",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4625)
                        },
                        new
                        {
                            LocationId = 7L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4640),
                            FacultyId = 1L,
                            Title = "1006",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4640)
                        },
                        new
                        {
                            LocationId = 8L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4655),
                            FacultyId = 1L,
                            Title = "1007",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4655)
                        },
                        new
                        {
                            LocationId = 9L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4669),
                            FacultyId = 1L,
                            Title = "1008",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4670)
                        },
                        new
                        {
                            LocationId = 10L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4686),
                            FacultyId = 1L,
                            Title = "1009",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4686)
                        },
                        new
                        {
                            LocationId = 11L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4701),
                            FacultyId = 1L,
                            Title = "10010",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4702)
                        },
                        new
                        {
                            LocationId = 12L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4716),
                            FacultyId = 1L,
                            Title = "10011",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4717)
                        },
                        new
                        {
                            LocationId = 13L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4731),
                            FacultyId = 1L,
                            Title = "10012",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4732)
                        },
                        new
                        {
                            LocationId = 14L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4746),
                            FacultyId = 1L,
                            Title = "10013",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4747)
                        },
                        new
                        {
                            LocationId = 15L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4761),
                            FacultyId = 1L,
                            Title = "10014",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4762)
                        },
                        new
                        {
                            LocationId = 16L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4776),
                            FacultyId = 1L,
                            Title = "10015",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4776)
                        },
                        new
                        {
                            LocationId = 17L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4791),
                            FacultyId = 1L,
                            Title = "10016",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4791)
                        },
                        new
                        {
                            LocationId = 18L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4807),
                            FacultyId = 1L,
                            Title = "10017",
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 374, DateTimeKind.Local).AddTicks(4807)
                        });
                });

            modelBuilder.Entity("DPA.Model.SyllabusEntity", b =>
                {
                    b.Property<long>("SyllabusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("DepartmentId");

                    b.Property<int>("EducationType");

                    b.Property<int>("PeriodType");

                    b.Property<int>("SemesterType");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("WeeklyHour");

                    b.Property<int>("Year");

                    b.HasKey("SyllabusId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Syllabus","Syllabus");
                });

            modelBuilder.Entity("DPA.Model.UnitLessonEntity", b =>
                {
                    b.Property<long>("UnitLessonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DayOfTheWeekType");

                    b.Property<int>("EndTime");

                    b.Property<int>("GroupType");

                    b.Property<long>("LessonId");

                    b.Property<long>("LocationId");

                    b.Property<int>("StarTime");

                    b.Property<long>("SyllabusId");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<long>("UserId");

                    b.HasKey("UnitLessonId");

                    b.HasIndex("LessonId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SyllabusId");

                    b.HasIndex("UserId");

                    b.ToTable("UnitLesson","Syllabus");
                });

            modelBuilder.Entity("DPA.Model.UserEntity", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("Roles");

                    b.Property<int>("Status");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Title");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("User","User");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 370, DateTimeKind.Local).AddTicks(1280),
                            Email = "administrator@administrator.com",
                            Login = "1h0ATANFe6x7kMHo1PURE74WI0ayevUwfK/+Ie+IWX/xWrFWngcVUwL/ewryn38EMVMQBFaNo4SaVwgXaBWnDw==",
                            Name = "Administrator",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 3,
                            Status = 1,
                            Surname = "Administrator",
                            Title = 0,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 370, DateTimeKind.Local).AddTicks(1300)
                        },
                        new
                        {
                            UserId = 2L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 371, DateTimeKind.Local).AddTicks(9748),
                            Email = "celalceken@sakarya.edu.tr",
                            Login = "sqqdGm+QyoYM0p0Co1hgYX9aPayWbuCoIpPkN3vm+ntuFm8/mNW901g1mPJP0V/ZdOuD05U5btfuffNNkvRSMQ==",
                            Name = "Celal",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Çeken",
                            Title = 1,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 371, DateTimeKind.Local).AddTicks(9749)
                        },
                        new
                        {
                            UserId = 3L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 371, DateTimeKind.Local).AddTicks(9948),
                            Email = "coz@sakarya.edu.tr",
                            Login = "lpe17pCaWVWNiI8dXvCHIEgaSpoTiULAZbWhSDxk1zbEdv3je87szjOl8CFst+hU8hITlcCc2AtvEIAdxgA+ng==",
                            Name = "Cemil",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 2,
                            Status = 1,
                            Surname = "Öz",
                            Title = 1,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 371, DateTimeKind.Local).AddTicks(9949)
                        },
                        new
                        {
                            UserId = 4L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(8),
                            Email = "umit@sakarya.edu.tr",
                            Login = "aYoce2dux8eT5/nvryziC97/nrEiqS5+S0hEMEvKhB0fGnI8dbF7AFLAi/+6dnvNOZwnHDJi+9VQwUtKaPeEcA==",
                            Name = "Ümit",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Kocabıçak",
                            Title = 1,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(9)
                        },
                        new
                        {
                            UserId = 5L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(80),
                            Email = "azengin@sakarya.edu.tr",
                            Login = "3b8hL6Cd/mm0v6MgNvkKvnoUjLbK/8+JNw/0AIXmtZjxfOcpZYndmXqV8UHH4dI8b1EnJ4LZWNs8lQV74pv2jQ==",
                            Name = "Ahmet",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Zengin",
                            Title = 3,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(81)
                        },
                        new
                        {
                            UserId = 6L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(145),
                            Email = "ozmen@sakarya.edu.tr",
                            Login = "DQFv5btLPxS0XrNFtrqeFiKSgPMPHwmrdk88CVFWmRBn2jK6vVpms4u8MoLUCvNMEhI99ECRDR8Rh6kuwDy+Zg==",
                            Name = "Ahmet",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Özmen",
                            Title = 3,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(146)
                        },
                        new
                        {
                            UserId = 7L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(200),
                            Email = "cbayilmis@sakarya.edu.tr",
                            Login = "dOGHhzh1rEnqFOee38OOgEWmQM5Ex3+PtVwdLHWpKNlAjyuX+Zx9m91+f4TmlpEZKHL1hK/SunceSqkZ+m/u2g==",
                            Name = "Cüneyt",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Bayılmış",
                            Title = 3,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(201)
                        },
                        new
                        {
                            UserId = 8L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(255),
                            Email = "ahmetarslan@sakarya.edu.tr",
                            Login = "h0g/LYGJK7QP9Lo3ZNMnCtlyzkVTVhf3c+S+lA7ExZ/U9XP+84SvRNjjmnYrCMKQS2r6D7TPuuHH75zNwTU4YQ==",
                            Name = "Ahmet",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Arslan",
                            Title = 2,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(255)
                        },
                        new
                        {
                            UserId = 9L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(310),
                            Email = "beken@sakarya.edu.tr",
                            Login = "1J8MNqnuIyH/yRYMDQUejip91vrhoW+A3YdeD9eAYDtLuWx17l706wt6sXrzabpaW6CePiIxw5YU8jDQqnhMmA==",
                            Name = "Beyza",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Eken",
                            Title = 2,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(311)
                        },
                        new
                        {
                            UserId = 10L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(376),
                            Email = "ddural@sakarya.edu.tr",
                            Login = "+tqmuZBVWUcLTVBaSyXnHUGxLiN8+kdgrkW2Ds9wxhS4wAC/NO+vSPFKLYoWHkZDvtP6gVUSfW77X9FkB/Bimw==",
                            Name = "Deniz",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Balta",
                            Title = 2,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(377)
                        },
                        new
                        {
                            UserId = 11L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(434),
                            Email = "oguz@sakarya.edu.tr",
                            Login = "N2dbG766DJ+GQaFDlEPrH3ioi+ZD9VpnVGVHCtTxZl9nC+ruFrcTi7zgOIydZKCFaBqwKxpowNV2GYBRSPvNbQ==",
                            Name = "Oguzhan",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Aydın",
                            Title = 4,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(435)
                        },
                        new
                        {
                            UserId = 12L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(488),
                            Email = "hasantutan@sakarya.edu.tr",
                            Login = "GgWLS/9l9VKx7d18VXX+K3i3oJ6emqeCCniMnl6Gbg1cJftNXfCWUFao5OpNTaWCw39B/Z/1E5vV2+PPDFFesQ==",
                            Name = "Hasan",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Tutan",
                            Title = 4,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(489)
                        },
                        new
                        {
                            UserId = 13L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(543),
                            Email = "ercanpala@sakarya.edu.tr",
                            Login = "PS+3mJHvWnYUHEhmnfo8APwTthPB92Bf2CDAupt1vAWgbc78SYmxb+wL48kZAUB6jHANlNfpH9yuAjRAyF6vlA==",
                            Name = "Ercan",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Palabıyık",
                            Title = 4,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(543)
                        },
                        new
                        {
                            UserId = 14L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(597),
                            Email = "meltemayy@sakarya.edu.tr",
                            Login = "Ee6akHsxZOrmTyxqSHZL9vRY+MZdM6mUeRwEc7K+dRE8k1k0qagjmU8MN7KF0yVy7EkplM/ZIx90EbzYa4vTdA==",
                            Name = "Meltem",
                            Password = "CkcVGgdOYzq3tr7Wqrckq73c0yUPgKBrxhKiM6kHgFEB8kQbWykm5UzorIz7wHS7elZ0iDBIffCVkdvhZ+gA9g==",
                            Roles = 1,
                            Status = 1,
                            Surname = "Aydın",
                            Title = 4,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 372, DateTimeKind.Local).AddTicks(598)
                        });
                });

            modelBuilder.Entity("DPA.Model.UserLessonEntity", b =>
                {
                    b.Property<long>("UserLessonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("LessonId");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<long>("UserId");

                    b.HasKey("UserLessonId");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLesson","User");

                    b.HasData(
                        new
                        {
                            UserLessonId = 1L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(2959),
                            LessonId = 1L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(2961),
                            UserId = 5L
                        },
                        new
                        {
                            UserLessonId = 2L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3368),
                            LessonId = 1L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3369),
                            UserId = 8L
                        },
                        new
                        {
                            UserLessonId = 3L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3393),
                            LessonId = 1L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3393),
                            UserId = 11L
                        },
                        new
                        {
                            UserLessonId = 4L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3407),
                            LessonId = 2L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3407),
                            UserId = 2L
                        },
                        new
                        {
                            UserLessonId = 5L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3421),
                            LessonId = 2L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3422),
                            UserId = 9L
                        },
                        new
                        {
                            UserLessonId = 6L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3437),
                            LessonId = 2L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3437),
                            UserId = 12L
                        },
                        new
                        {
                            UserLessonId = 7L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3451),
                            LessonId = 3L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3451),
                            UserId = 3L
                        },
                        new
                        {
                            UserLessonId = 8L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3465),
                            LessonId = 3L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3466),
                            UserId = 5L
                        },
                        new
                        {
                            UserLessonId = 9L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3479),
                            LessonId = 3L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3479),
                            UserId = 13L
                        },
                        new
                        {
                            UserLessonId = 10L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3493),
                            LessonId = 4L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3494),
                            UserId = 14L
                        },
                        new
                        {
                            UserLessonId = 11L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3507),
                            LessonId = 5L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3508),
                            UserId = 7L
                        },
                        new
                        {
                            UserLessonId = 12L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3521),
                            LessonId = 6L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3522),
                            UserId = 4L
                        },
                        new
                        {
                            UserLessonId = 13L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3535),
                            LessonId = 6L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3536),
                            UserId = 10L
                        },
                        new
                        {
                            UserLessonId = 14L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3549),
                            LessonId = 7L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3550),
                            UserId = 11L
                        },
                        new
                        {
                            UserLessonId = 15L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3563),
                            LessonId = 7L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3564),
                            UserId = 12L
                        },
                        new
                        {
                            UserLessonId = 16L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3577),
                            LessonId = 7L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3578),
                            UserId = 10L
                        },
                        new
                        {
                            UserLessonId = 17L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3591),
                            LessonId = 8L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3592),
                            UserId = 5L
                        },
                        new
                        {
                            UserLessonId = 18L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3606),
                            LessonId = 8L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3607),
                            UserId = 13L
                        },
                        new
                        {
                            UserLessonId = 19L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3620),
                            LessonId = 9L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3621),
                            UserId = 8L
                        },
                        new
                        {
                            UserLessonId = 20L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3634),
                            LessonId = 9L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3635),
                            UserId = 9L
                        },
                        new
                        {
                            UserLessonId = 21L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3648),
                            LessonId = 9L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3648),
                            UserId = 14L
                        },
                        new
                        {
                            UserLessonId = 22L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3662),
                            LessonId = 10L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3662),
                            UserId = 2L
                        },
                        new
                        {
                            UserLessonId = 23L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3675),
                            LessonId = 10L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3676),
                            UserId = 3L
                        },
                        new
                        {
                            UserLessonId = 24L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3689),
                            LessonId = 11L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3690),
                            UserId = 6L
                        },
                        new
                        {
                            UserLessonId = 25L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3712),
                            LessonId = 11L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3712),
                            UserId = 7L
                        },
                        new
                        {
                            UserLessonId = 26L,
                            CreatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3727),
                            LessonId = 12L,
                            UpdatedDate = new DateTime(2019, 4, 23, 21, 39, 5, 373, DateTimeKind.Local).AddTicks(3727),
                            UserId = 4L
                        });
                });

            modelBuilder.Entity("DPA.Model.UserLogEntity", b =>
                {
                    b.Property<long>("UserLogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasMaxLength(8000);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("LogType");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<long>("UserId");

                    b.HasKey("UserLogId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersLog","User");
                });

            modelBuilder.Entity("DPA.Model.ConstraintEntity", b =>
                {
                    b.HasOne("DPA.Model.UserEntity", "User")
                        .WithOne("Constraint")
                        .HasForeignKey("DPA.Model.ConstraintEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DPA.Model.DepartmentEntity", b =>
                {
                    b.HasOne("DPA.Model.FacultyEntity", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DPA.Model.UserEntity", "HeadOfDepartment")
                        .WithOne("Department")
                        .HasForeignKey("DPA.Model.DepartmentEntity", "HeadOfDepartmentId");
                });

            modelBuilder.Entity("DPA.Model.DepartmentLessonEntity", b =>
                {
                    b.HasOne("DPA.Model.DepartmentEntity", "Department")
                        .WithMany("DepartmentLessons")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DPA.Model.LessonEntity", "Lesson")
                        .WithMany("DepartmentLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DPA.Model.LessonGroupEntity", b =>
                {
                    b.HasOne("DPA.Model.LessonEntity", "Lesson")
                        .WithMany("LessonGroups")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DPA.Model.LocationEntity", b =>
                {
                    b.HasOne("DPA.Model.FacultyEntity", "Faculty")
                        .WithMany("Locations")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DPA.Model.SyllabusEntity", b =>
                {
                    b.HasOne("DPA.Model.DepartmentEntity", "Department")
                        .WithMany("Syllabus")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DPA.Model.UnitLessonEntity", b =>
                {
                    b.HasOne("DPA.Model.LessonEntity", "Lesson")
                        .WithMany("UnitLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DPA.Model.LocationEntity", "Location")
                        .WithMany("UnitLessons")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DPA.Model.SyllabusEntity", "Syllabus")
                        .WithMany("UnitLessons")
                        .HasForeignKey("SyllabusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DPA.Model.UserEntity", "User")
                        .WithMany("UnitLessons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DPA.Model.UserLessonEntity", b =>
                {
                    b.HasOne("DPA.Model.LessonEntity", "Lesson")
                        .WithMany("UserLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DPA.Model.UserEntity", "User")
                        .WithMany("UserLessons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DPA.Model.UserLogEntity", b =>
                {
                    b.HasOne("DPA.Model.UserEntity", "User")
                        .WithMany("UsersLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
